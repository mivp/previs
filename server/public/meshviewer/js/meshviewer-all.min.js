"use strict";var socket=io(),url=new URL(window.location.href),gTag=url.searchParams.get("tag");if(console.log(window.location),console.log("Tag:"+gTag),null===gTag||void 0===gTag)throw alert("Tag is not specified"),new Error("Tag is not specified!");var gGui=null;function showMessage(e,t=!1){document.getElementById("status-icon").style.display=t?"inline":"none",document.getElementById("status-message").innerHTML=e,console.log(e)}function getCenter(e){return{x:(e.min.x+e.max.x)/2,y:(e.min.y+e.max.y)/2,z:(e.min.z+e.max.z)/2}}var PrevisMeshRenderer=function(){var e=THREE.LoaderSupport.Validator;function t(e){this.renderer=null,this.canvas=e,this.aspectRatio=1,this.recalcAspectRatio(),this.scene=null,this.cameraDefaults={posCamera:new THREE.Vector3(0,1,5),posCameraTarget:new THREE.Vector3(0,0,0),near:.1,far:1e4,fov:45},this.camera=null,this.cameraTarget=this.cameraDefaults.posCameraTarget,this.controls=null,this.allGroups=new THREE.Group,this.bbox=null,this.defaultBgColour=[64,64,72],this.jsonOri=null,this.json=null,this.groups=[],this.numberOfModels,this.modelCount=0,this.axis=null}return t.prototype.initGL=function(){this.renderer=new THREE.WebGLRenderer({canvas:this.canvas,antialias:!0,autoClear:!0}),this.renderer.setClearColor(this.defaultBgColour),this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(this.cameraDefaults.fov,this.aspectRatio,this.cameraDefaults.near,this.cameraDefaults.far),this.resetCamera(),this.controls=new THREE.TrackballControls(this.camera,this.renderer.domElement);var e=new THREE.AmbientLight(16777215),t=new THREE.DirectionalLight(16777215),s=new THREE.DirectionalLight(16777215);t.position.set(-100,-50,100),s.position.set(100,50,-100),this.scene.add(t),this.scene.add(s),this.scene.add(e),this.scene.add(this.allGroups)},t.prototype.loadJsonConfig=function(e){showMessage("Load json configuration from server...",!0);var t=this,s=new XMLHttpRequest;s.onreadystatechange=function(){if(4==this.readyState&&200==this.status){var s=JSON.parse(this.responseText);t.jsonOri=Object.assign({},s),t.json=Object.assign({},s);var a={};a.translate=void 0!==s.views.translate?s.views.translate:[0,0,0],a.showAxis=void 0===s.views.showAxis||s.views.showAxis,a.camera=void 0!==s.views.camera?s.views.camera:null,a.backgroundColour=void 0!==s.views.backgroundColour?s.views.backgroundColour:t.defaultBgColour,t.json.views=a,(s=s.objects).sort(function(e,t){return e.name>t.name?1:e.name<t.name?-1:0}),t.json.objects=s,console.log("loadScene",t.json),showMessage(""),e()}},s.open("GET","data/tags/"+gTag+"/mesh_result/mesh.json"),s.send()},t.prototype._reportProgress=function(t){var s=e.verifyInput(t.detail.text,"");console.log("Progress: "+s),showMessage(s,!0)},t.prototype._updateBBox=function(e){this.bbox?(this.bbox.min.x=Math.min(this.bbox.min.x,e.min.x),this.bbox.min.y=Math.min(this.bbox.min.y,e.min.y),this.bbox.min.z=Math.min(this.bbox.min.z,e.min.z),this.bbox.max.x=Math.max(this.bbox.max.x,e.max.x),this.bbox.max.y=Math.max(this.bbox.max.y,e.max.y),this.bbox.max.z=Math.max(this.bbox.max.z,e.max.z)):this.bbox=e.clone()},t.prototype._loadMeshObject=function(e,t,s,a){var o=this,i="data/tags/"+gTag+"/mesh_result/"+s+"/",n=new THREE.OBJLoader2;showMessage("Loading model "+a,!0);var r=function(t){o.modelCount+=1;var s=t.detail.loaderRootNode;s.traverse(function(e){if(void 0!==e.geometry){var t=new THREE.Geometry;t.fromBufferGeometry(e.geometry),t.mergeVertices(),t.computeVertexNormals(),e.geometry.fromGeometry(t)}}),e.add(s),o._updateBBox((new THREE.Box3).setFromObject(s)),o.modelCount<o.numberOfModels?showMessage("Loading complete: "+t.detail.modelName+" ( "+o.modelCount+"/"+o.numberOfModels+")",!0):(console.log(s),o.finaliseScene(),showMessage("")),console.log(msg)};if(n.setModelName(a),n.setLogging(!1,!1),t.hasmtl){n.loadMtl(i+t.mtl,null,function(e){n.setMaterials(e),n.load(i+t.obj,r,null,null,null,!1)})}else{var l=new THREE.MeshBasicMaterial({color:16777215});n.setMaterials(l),n.load(i+t.obj,r,null,null,null,!1)}},t.prototype._loadGroup=function(e){const t=this.json.objects[e].objects;for(var s=new THREE.Group,a=0;a<t.length;a++){var o=this.json.objects[e].name+"_"+a;this._loadMeshObject(s,t[a],this.json.objects[e].name,o)}this.allGroups.add(s),this.groups.push(s)},t.prototype.initContent=function(e){var t=this;t.loadJsonConfig(function(){t.numberOfModels=0;for(var s=0;s<t.json.objects.length;s++)t.numberOfModels+=t.json.objects[s].objects.length;t.modelCount=0;for(s=0;s<t.json.objects.length;s++)t._loadGroup(s);e()})},t.prototype.finaliseScene=function(){console.log("finaliseScene",this.bbox);var e=Math.max(Math.abs(this.bbox.max.x-this.bbox.min.x),Math.abs(this.bbox.max.y-this.bbox.min.y));e=Math.max(e,Math.abs(this.bbox.max.z-this.bbox.min.z)),console.log(e),this.axis=new THREE.AxesHelper(e),this.scene.add(this.axis),this.updateAll()},t.prototype._updateMaterial=function(e,t,s){var a=[];e.traverse(function(e){e instanceof THREE.Mesh&&a.push(e)});for(var o=0;o<a.length;o++){var i=a[o];if(Array.isArray(i.material))for(var n=0;n<i.material.length;n++)s.hasmtl||i.material[n].color.setRGB(t.colour[0]/255,t.colour[1]/255,t.colour[2]/255),i.material[n].opacity=t.alpha,i.material[n].transparent=t.alpha<1;else s.hasmtl||i.material.color.setRGB(t.colour[0]/255,t.colour[1]/255,t.colour[2]/255),i.material.opacity=t.alpha,i.material.transparent=t.alpha<1}},t.prototype.updateScene=function(){const e=this.json.objects;for(var t=0;t<e.length;t++){var s=this.groups[t];const i=e[t];for(var a=0;a<s.children.length;a++){var o=s.children[a];const n=e[t].objects[a];o.visible=i.visible,this._updateMaterial(o,i,n)}}},t.prototype._updateObjects=function(){var e=this.json.views.translate;console.log("updateObjects moveto: ",e),this.allGroups.position.set(e[0],e[1],e[2])},t.prototype.centreObjects=function(){if(console.log("Center objects",this.bbox),null!==this.bbox&&void 0!==this.bbox){var e=(this.bbox.min.x+this.bbox.max.x)/2,t=(this.bbox.min.y+this.bbox.max.y)/2,s=(this.bbox.min.z+this.bbox.max.z)/2;this.json.views.translate=[-e,-t,-s],this._updateObjects()}},t.prototype.resetTranslate=function(){this.json.views.translate=[0,0,0],this._updateObjects()},t.prototype.updateBackground=function(){this.renderer.setClearColor(new THREE.Color(this.json.views.backgroundColour[0]/255,this.json.views.backgroundColour[1]/255,this.json.views.backgroundColour[2]/255))},t.prototype.updateAxis=function(){this.axis&&(this.axis.visible=this.json.views.showAxis)},t.prototype.updateAll=function(){var e=Math.max(Math.abs(this.bbox.max.x-this.bbox.min.x),Math.abs(this.bbox.max.y-this.bbox.min.y));e=Math.max(e,Math.abs(this.bbox.max.z-this.bbox.min.z));var t=this.json.views.camera;null!==t&&void 0!==t?(this.camera.matrix.fromArray(t.matrix),this.camera.near=t.near,this.camera.far=t.far,this.camera.matrix.decompose(this.camera.position,this.camera.quaternion,this.camera.scale),this.camera.updateMatrixWorld()):(this.camera.near=.001*e,this.camera.far=10*e,this.camera.position.z=1.6*e,this.camera.updateProjectionMatrix()),this.updateAxis(),this.updateBackground(),this.updateScene()},t.prototype.resizeDisplayGL=function(){this.controls.handleResize(),this.recalcAspectRatio(),this.renderer.setSize(this.canvas.offsetWidth,this.canvas.offsetHeight,!1),this.updateCamera()},t.prototype.recalcAspectRatio=function(){this.aspectRatio=0===this.canvas.offsetHeight?1:this.canvas.offsetWidth/this.canvas.offsetHeight},t.prototype.resetCamera=function(){this.camera.position.copy(this.cameraDefaults.posCamera),this.cameraTarget.copy(this.cameraDefaults.posCameraTarget),this.updateCamera()},t.prototype.updateCamera=function(){this.camera.aspect=this.aspectRatio,this.camera.lookAt(this.cameraTarget),this.camera.updateProjectionMatrix()},t.prototype.render=function(){this.renderer.autoClear||this.renderer.clear(),this.controls.update(),this.renderer.render(this.scene,this.camera)},t}(),app=new PrevisMeshRenderer(document.getElementById("meshviewer")),resizeWindow=function(){app.resizeDisplayGL()},render=function(){requestAnimationFrame(render),app.render()},centreObjects=function(){app.centreObjects()},resetTranslate=function(){app.resetTranslate()},resetMessage=function(){showMessage("")};socket.on("savemeshjson",function(e){console.log("savemeshjson"),console.log(e),"error"==e.status?(showMessage("Can not save view parameters for examples - aborting!"),setTimeout(resetMessage,4e3)):(showMessage("Saved settings successfully!"),setTimeout(resetMessage,4e3))});var saveSettings=function(){if(null===gTag||void 0===gTag)return;showMessage("Saving settings...",!0);var e=Object.assign({},app.json);const t={near:app.camera.near,far:app.camera.far,matrix:app.camera.matrix.toArray()};e.views.camera=t,socket.emit("savemeshjson",{tag:gTag,jsonStr:JSON.stringify(e,null,4)})},reloadSettings=function(){showMessage("Reloading settings from server!"),app.loadJsonConfig(function(){buildGui(),app.updateAll(),showMessage("Reloaded settings successfully!"),setTimeout(resetMessage,4e3)})},buildGui=function(){const e=app.json;console.log("buildGui",e);var t={saveSettings:saveSettings,reloadSettings:reloadSettings,views:{background:e.views.backgroundColour,centreObjects:centreObjects,resetTranslate:resetTranslate,showAxis:e.views.showAxis},objects:e.objects};gGui&&gGui.destroy();var s=gGui=new dat.GUI;s.add(t,"saveSettings").name("Save settings"),s.add(t,"reloadSettings").name("Reload settings");var a=s.addFolder("Views");console.log(t.views),a.addColor(t.views,"background").name("Background").onChange(function(t){e.views.backgroundColour=t,app.updateBackground()}),a.add(t.views,"showAxis").name("Show axes").onChange(function(t){e.views.showAxis=t,app.updateAxis()}),a.add(t.views,"centreObjects").name("Centre objects"),a.add(t.views,"resetTranslate").name("Reset translate");var o=s.addFolder("Mesh groups");o.open();for(var i=0;i<t.objects.length;i++){var n=o.addFolder(t.objects[i].name+" ("+t.objects[i].objects.length+")"),r=n.add(t.objects[i],"alpha").min(0).max(1).step(.05);r.index=i,r.onChange(function(e){t.objects[this.index].alpha=e,app.updateScene()});for(var l=!1,c=0;c<t.objects[i].objects.length;c++)if(!1===t.objects[i].objects[c].hasmtl){l=!0;break}if(l){console.log(t.objects[i]);var h=n.addColor(t.objects[i],"colour");h.index=i,h.onChange(function(e){console.log("hColour",this.index,e),t.objects[this.index].colour=e,app.updateScene()})}var u=n.add(t.objects[i],"visible");u.index=i,u.onChange(function(e){t.objects[this.index].visible=e,app.updateScene()})}};window.addEventListener("resize",resizeWindow,!1),console.log("Starting initialisation phase..."),app.initGL(),app.resizeDisplayGL(),app.initContent(function(){buildGui()}),render();